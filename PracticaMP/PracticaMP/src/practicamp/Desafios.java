/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package practicamp;

import java.awt.CardLayout;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;

/**
 *
 * @author aserr
 */
public class Desafios extends javax.swing.JPanel {
    
    private Almacen almacen;
    private int oro;
    /**
     * Creates new form Desafios
     */
    public Desafios(Almacen almacen) {
        this.almacen = almacen;
        initComponents();
    }
    
    DefaultListModel mod = new DefaultListModel();
    public void actualizatList(){
        int i = 0;
        List<Usuario> usuarios = this.almacen.getUsuarios();
        userList.setModel(mod); // para añadir los elementos a la lista
        mod.clear();
        while (i < usuarios.size()){
            String candidato = usuarios.get(i).getNick();
            if (!candidato.equalsIgnoreCase(almacen.getUsuarioActivo().getNick())){
                mod.addElement(candidato);
            }else {
                this.oro = usuarios.get(i).getOro();
            }
            i = i + 1;
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        userList = new javax.swing.JList<>();
        goldText = new javax.swing.JTextField();
        desafiar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        userList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(userList);

        goldText.setText("Apostar oro");
        goldText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                goldTextMousePressed(evt);
            }
        });

        desafiar.setText("Desafiar");
        desafiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desafiarActionPerformed(evt);
            }
        });

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(goldText, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(desafiar, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(goldText, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(desafiar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void desafiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desafiarActionPerformed
        if((userList.getSelectedIndex() != -1) && (!goldText.getText().equals("Apostar oro"))&& Integer.parseInt(goldText.getText())<= this.oro) {// el boton solo hace cosas si eliges un nombre de la lista 
            String contrincante = userList.getSelectedValue();
            int oroApostado = Integer.parseInt(goldText.getText());
            Desafio desafio = new Desafio(this.almacen.getUsuarioActivo().getNick(),contrincante,oroApostado);
            this.almacen.agregarDesafioAValidacion(desafio);
            JPanel parent = (JPanel) getParent();
            CardLayout cl = (CardLayout) parent.getLayout();
            cl.show(parent, "menuUsuario");
        }else if (userList.getSelectedIndex() == -1){
            javax.swing.JOptionPane.showMessageDialog(this, "Seleccione un contringante");
        }else if(goldText.getText().equals("Apostar oro")){
            javax.swing.JOptionPane.showMessageDialog(this, "Añada una cantidad de oro para apostar");
        }else if(Integer.parseInt(goldText.getText()) > this.oro){
            javax.swing.JOptionPane.showMessageDialog(this, "No tiene suficiente oro");
            goldText.setText("Apostar oro");
        }
    }//GEN-LAST:event_desafiarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JPanel parent = (JPanel) getParent();
        CardLayout cl = (CardLayout) parent.getLayout();
        cl.show(parent, "menuUsuario");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void goldTextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goldTextMousePressed
        goldText.setText("");
    }//GEN-LAST:event_goldTextMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton desafiar;
    private javax.swing.JTextField goldText;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> userList;
    // End of variables declaration//GEN-END:variables
}
